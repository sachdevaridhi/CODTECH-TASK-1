import pandas as pd
import os
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
directory_path = r'C:\Users\DELL\Downloads'

# List files in the directory
files = os.listdir(directory_path)
print("Files in directory:", files)
file_path = os.path.join(directory_path, 'Titanic-Dataset.csv')

if os.path.exists(file_path):
    try:
        titanic_data = pd.read_csv(file_path)
        print("File loaded successfully!")
        # Display the first few rows of the dataset to verify it loaded correctly
        print(titanic_data.head())
    except Exception as e:
        print(f"Error loading file: {e}")
else:
    print(f"File not found at path: {file_path}")
if 'titanic_data' in locals():
    print("Dataset loaded successfully.")
else:
    print("The dataset was not loaded. Please check the file path and try again.")
titanic_data = titanic_data[['Age', 'Fare']].dropna()

# Display the first few rows of the processed dataset
print(titanic_data.head())
X = titanic_data[['Age']]
y = titanic_data['Fare']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
# Evaluate the model's performance
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")
# Plot the regression line
plt.figure(figsize=(10, 6))
plt.scatter(X_test, y_test, color='blue', label='Actual values')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Regression line')
plt.xlabel('Age')
plt.ylabel('Fare')
plt.title('Age vs Fare Regression')
plt.legend()
plt.grid(True)
plt.show()
